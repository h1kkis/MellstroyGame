// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const CORRECT_PASSWORD = "Mellstroygame";

// –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü
const loginPage = document.getElementById('login-page');
const modeSelectPage = document.getElementById('mode-select-page');
const slotsPage = document.getElementById('slots-page');
const farmPage = document.getElementById('farm-page');
const chatPage = document.getElementById('chat-page');

// –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞
const passwordInput = document.getElementById('password-input');
const loginBtn = document.getElementById('login-btn');
const errorMessage = document.getElementById('error-message');

// –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
const farmBtn = document.getElementById('farm-btn');
const slotsBtn = document.getElementById('slots-btn');
const chatBtn = document.getElementById('chat-btn');

// –ö–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
const backFromFarm = document.getElementById('back-from-farm');
const backFromChat = document.getElementById('back-from-chat');
const backFromSlots = document.getElementById('back-from-slots');

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–≥—Ä–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const playBtn = document.getElementById('play-btn');
const character = document.getElementById('character');
const curtains = [
    document.getElementById('curtain1'),
    document.getElementById('curtain2'),
    document.getElementById('curtain3')
];
const slots = [
    document.getElementById('slot1'),
    document.getElementById('slot2'),
    document.getElementById('slot3')
];
const winMessage = document.getElementById('win-message');

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
function switchPage(fromPage, toPage) {
    fromPage.classList.remove('active');
    toPage.classList.add('active');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
function checkPassword() {
    const enteredPassword = passwordInput.value;
    
    if (enteredPassword === CORRECT_PASSWORD) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
        errorMessage.textContent = '';
        switchPage(loginPage, modeSelectPage);
    } else {
        // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
        errorMessage.textContent = '–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π';
        passwordInput.value = '';
        passwordInput.focus();
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏
        passwordInput.classList.add('shake');
        setTimeout(() => {
            passwordInput.classList.remove('shake');
        }, 500);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤—Ö–æ–¥–∞
loginBtn.addEventListener('click', checkPassword);

passwordInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        checkPassword();
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
farmBtn.addEventListener('click', () => {
    switchPage(modeSelectPage, farmPage);
});

slotsBtn.addEventListener('click', () => {
    switchPage(modeSelectPage, slotsPage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞
backFromFarm.addEventListener('click', () => {
    switchPage(farmPage, modeSelectPage);
});

backFromChat.addEventListener('click', () => {
    switchPage(chatPage, modeSelectPage);
});

// === –õ–û–ì–ò–ö–ê –ß–ê–¢–ê ===
const chatMessages = document.getElementById('chat-messages');
const chatInput = document.getElementById('chat-input');
const chatSendButton = document.getElementById('chat-send');

let chatInitialized = false;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
function getCurrentTime() {
    const now = new Date();
    return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
function addMessage(text, sender = 'mellstroy') {
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}`;
    
    const avatarImg = document.createElement('img');
    avatarImg.src = 'mellstroy-chatting.PNG';
    avatarImg.className = 'message-avatar';
    
    const contentDiv = document.createElement('div');
    contentDiv.className = 'message-content';
    
    const bubbleDiv = document.createElement('div');
    bubbleDiv.className = 'message-bubble';
    bubbleDiv.textContent = text;
    
    const timeSpan = document.createElement('div');
    timeSpan.className = 'message-time';
    timeSpan.textContent = getCurrentTime();
    
    contentDiv.appendChild(bubbleDiv);
    contentDiv.appendChild(timeSpan);
    
    if (sender === 'mellstroy') {
        messageDiv.appendChild(avatarImg);
    }
    messageDiv.appendChild(contentDiv);
    
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏
function showTypingIndicator() {
    const typingDiv = document.createElement('div');
    typingDiv.className = 'message mellstroy';
    typingDiv.id = 'typing-indicator';
    
    const avatarImg = document.createElement('img');
    avatarImg.src = 'mellstroy-chatting.PNG';
    avatarImg.className = 'message-avatar';
    
    const indicatorDiv = document.createElement('div');
    indicatorDiv.className = 'typing-indicator';
    indicatorDiv.innerHTML = '<span class="typing-dot"></span><span class="typing-dot"></span><span class="typing-dot"></span>';
    
    typingDiv.appendChild(avatarImg);
    typingDiv.appendChild(indicatorDiv);
    chatMessages.appendChild(typingDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏
function removeTypingIndicator() {
    const indicator = document.getElementById('typing-indicator');
    if (indicator) {
        indicator.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ Mellstroy
function mellstroyReply(userMessage) {
    const lowerMessage = userMessage.toLowerCase().trim();
    
    showTypingIndicator();
    
    setTimeout(() => {
        removeTypingIndicator();
        
        if (lowerMessage === '–ø—Ä–∏–≤–µ—Ç') {
            addMessage('–ö–∞–∫ –¥–µ–ª–∞?', 'mellstroy');
        } else if (lowerMessage.includes('—Ö–æ—Ä–æ—à–æ') || lowerMessage.includes('–æ—Ç–ª–∏—á–Ω–æ') || lowerMessage.includes('–Ω–æ—Ä–º')) {
            addMessage('–†–∞–¥ —Å–ª—ã—à–∞—Ç—å! üòé', 'mellstroy');
        } else if (lowerMessage.includes('–ø–ª–æ—Ö–æ') || lowerMessage.includes('–Ω–µ –æ—á–µ–Ω—å')) {
            addMessage('–ù–µ –≥—Ä—É—Å—Ç–∏, –ë–æ—Ä–æ–≤! –í—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è! üí™', 'mellstroy');
        } else if (lowerMessage.includes('–∫–∞–∫ –¥–µ–ª–∞') || lowerMessage.includes('–∫–∞–∫ —É —Ç–µ–±—è')) {
            addMessage('–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –°—Ç—Ä–∏–º–ª—é, –∏–≥—Ä–∞—é –≤ –∫–∞–∑–∏–Ω–æ üé∞', 'mellstroy');
        } else if (lowerMessage.includes('–ø–æ–∫–∞') || lowerMessage.includes('–¥–æ –≤—Å—Ç—Ä–µ—á–∏')) {
            addMessage('–ü–æ–∫–∞, –ë–æ—Ä–æ–≤! –ó–∞—Ö–æ–¥–∏ –µ—â—ë! üëã', 'mellstroy');
        } else {
            const randomReplies = [
                '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ë–æ—Ä–æ–≤! ü§î',
                '–ê–≥–∞, –ø–æ–Ω—è–ª —Ç–µ–±—è!',
                '–ö—Ä—É—Ç–æ —Å–∫–∞–∑–∞–Ω–æ! üíØ',
                '–•–∞—Ö, —Ç—ã –º–µ–Ω—è —É–¥–∏–≤–ª—è–µ—à—å!',
                '–°–ª—É—à–∞–π, —ç—Ç–æ —Ç–µ–º–∞! üî•'
            ];
            addMessage(randomReplies[Math.floor(Math.random() * randomReplies.length)], 'mellstroy');
        }
    }, 1000 + Math.random() * 1000);
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendMessage() {
    const text = chatInput.value.trim();
    if (!text) return;
    
    addMessage(text, 'user');
    chatInput.value = '';
    
    // Mellstroy –æ—Ç–≤–µ—á–∞–µ—Ç
    mellstroyReply(text);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —á–∞—Ç–∞
chatSendButton.addEventListener('click', sendMessage);

chatInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        sendMessage();
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
chatBtn.addEventListener('click', () => {
    switchPage(modeSelectPage, chatPage);
    
    // –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Mellstroy
    if (!chatInitialized) {
        setTimeout(() => {
            addMessage('–ü—Ä–∏–≤–µ—Ç, –ë–æ—Ä–æ–≤', 'mellstroy');
        }, 500);
        chatInitialized = true;
    }
});

backFromSlots.addEventListener('click', () => {
    switchPage(slotsPage, modeSelectPage);
});

// –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞
let isPlaying = false;

// –í–æ–∑–º–æ–∂–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è —Å–ª–æ—Ç–æ–≤
const slotSymbols = ['üçí', 'üçã', 'üçä', 'üçâ', 'üçá', '7'];

function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
function getRandomSymbol() {
    return slotSymbols[Math.floor(Math.random() * slotSymbols.length)];
}

async function playGame() {
    if (isPlaying) return;
    
    isPlaying = true;
    playBtn.disabled = true;
    playBtn.style.opacity = '0.5';
    winMessage.classList.remove('show');
    
    // –°–±—Ä–æ—Å —Å–ª–æ—Ç–æ–≤
    curtains.forEach(curtain => {
        curtain.classList.remove('open');
        curtain.style.transform = 'scaleY(1)';
    });
    
    slots.forEach(slot => {
        const number = slot.querySelector('.slot-number');
        number.classList.remove('revealed');
        number.style.opacity = '0';
    });
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    const symbols = [getRandomSymbol(), getRandomSymbol(), getRandomSymbol()];
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    character.classList.add('moving');
    
    await sleep(500);
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –∑–∞–Ω–∞–≤–µ—Å–æ–≤ –ø–æ –æ—á–µ—Ä–µ–¥–∏
    for (let i = 0; i < curtains.length; i++) {
        await sleep(800);
        
        // –ü–µ—Ä—Å–æ–Ω–∞–∂ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–Ω–∞–≤–µ—Å
        curtains[i].classList.add('open');
        
        await sleep(300);
        
        // –ü–æ–∫–∞–∑ —Å–∏–º–≤–æ–ª–∞
        const number = slots[i].querySelector('.slot-number');
        number.textContent = symbols[i];
        number.classList.add('revealed');
    }
    
    await sleep(500);
    
    // –í–æ–∑–≤—Ä–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    character.classList.remove('moving');
    
    await sleep(500);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞ (–≤—Å–µ —Å–∏–º–≤–æ–ª—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ)
    if (symbols[0] === symbols[1] && symbols[1] === symbols[2]) {
        // –ü–æ–∫–∞–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –î–ñ–ï–ö–ü–û–¢
        const jackpotOverlay = document.getElementById('jackpot-overlay');
        jackpotOverlay.classList.add('show');
        
        // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–ª—é—Ç–æ–≤
        createFireworks();
        
        // –°–∫—Ä—ã—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            jackpotOverlay.classList.remove('show');
        }, 5000);
    }
    
    await sleep(1000);
    
    // –í–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–æ–≤–∞
    playBtn.disabled = false;
    playBtn.style.opacity = '1';
    isPlaying = false;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
function createConfetti() {
    const colors = ['#ffd700', '#ffeb3b', '#d4af37', '#fff176', '#f9a825'];
    
    for (let i = 0; i < 50; i++) {
        setTimeout(() => {
            const confetti = document.createElement('div');
            confetti.className = 'confetti';
            confetti.style.left = Math.random() * 100 + 'vw';
            confetti.style.top = '-10px';
            confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
            confetti.style.animationDuration = (Math.random() * 2 + 2) + 's';
            confetti.style.animationDelay = '0s';
            
            document.body.appendChild(confetti);
            
            // –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
            setTimeout(() => {
                confetti.remove();
            }, 5000);
        }, i * 50);
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–ª—é—Ç–æ–≤ (—Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–æ–≤)
function createFireworks() {
    const colors = ['#ffd700', '#ffeb3b', '#ff6b6b', '#4ecdc4', '#95e1d3', '#f38181', '#aa96da', '#fcbad3', '#ffffd2'];
    
    // –°–æ–∑–¥–∞–µ–º 15 —Å–∞–ª—é—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥
    for (let i = 0; i < 15; i++) {
        setTimeout(() => {
            // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∞–ª—é—Ç–∞
            const startX = Math.random() * 80 + 10; // –æ—Ç 10% –¥–æ 90%
            const startY = Math.random() * 40 + 50; // –æ—Ç 50% –¥–æ 90%
            
            // –°–æ–∑–¥–∞–µ–º –≤–∑—Ä—ã–≤ –∏–∑ 30 —á–∞—Å—Ç–∏—Ü
            for (let j = 0; j < 30; j++) {
                const firework = document.createElement('div');
                firework.className = 'firework';
                
                // –°–ª—É—á–∞–π–Ω—ã–π —É–≥–æ–ª –∏ —Å–∫–æ—Ä–æ—Å—Ç—å
                const angle = (Math.PI * 2 * j) / 30;
                const velocity = Math.random() * 100 + 50;
                
                firework.style.left = startX + '%';
                firework.style.top = startY + '%';
                firework.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                
                document.body.appendChild(firework);
                
                // –ê–Ω–∏–º–∞—Ü–∏—è —á–∞—Å—Ç–∏—Ü—ã
                let x = 0;
                let y = 0;
                let opacity = 1;
                const gravity = 0.5;
                let velocityX = Math.cos(angle) * velocity;
                let velocityY = Math.sin(angle) * velocity;
                
                const animate = () => {
                    x += velocityX * 0.05;
                    y += velocityY * 0.05;
                    velocityY += gravity;
                    opacity -= 0.02;
                    
                    firework.style.transform = `translate(${x}px, ${y}px)`;
                    firework.style.opacity = opacity;
                    
                    if (opacity > 0) {
                        requestAnimationFrame(animate);
                    } else {
                        firework.remove();
                    }
                };
                
                requestAnimationFrame(animate);
            }
        }, i * 300);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–≥—Ä—ã
playBtn.addEventListener('click', playGame);

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–¥–∞—é—â–∏—Ö –∫—É–ø—é—Ä MELLCOIN
function createFallingDollars() {
    setInterval(() => {
        const dollar = document.createElement('div');
        dollar.className = 'falling-dollar';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫—É–ø—é—Ä—ã
        dollar.innerHTML = `
            <div class="mellcoin-text">MELLCOIN</div>
            <div class="mellcoin-small-value">100</div>
        `;
        
        // –ê–±—Å–æ–ª—é—Ç–Ω–æ —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ –≤—Å–µ–π —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞
        dollar.style.left = Math.random() * 88 + 'vw';
        
        // –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–∞–¥–µ–Ω–∏—è
        const duration = Math.random() * 2 + 5; // –æ—Ç 5 –¥–æ 7 —Å–µ–∫—É–Ω–¥
        dollar.style.animationDuration = duration + 's';
        
        // –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è
        const initialRotation = Math.random() * 30 - 15; // –æ—Ç -15 –¥–æ 15 –≥—Ä–∞–¥—É—Å–æ–≤
        dollar.style.setProperty('--initial-rotation', initialRotation + 'deg');
        
        // –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—â–µ–Ω–∏—è
        const rotationDirection = Math.random() > 0.5 ? 1 : -1;
        dollar.style.setProperty('--rotation-direction', rotationDirection);
        
        document.body.appendChild(dollar);
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –∫—É–ø—é—Ä—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è –∑–∞ –∫—Ä–∞–π —ç–∫—Ä–∞–Ω–∞
        setTimeout(() => {
            dollar.remove();
        }, duration * 1000);
    }, 800); // –†–µ–∂–µ - –∫–∞–∂–¥—ã–µ 800–º—Å –¥–ª—è –º–µ–Ω—å—à–∏—Ö –ª–∞–≥–æ–≤
}

// –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('load', () => {
    passwordInput.focus();
    createFallingDollars();
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ —Å–ª–æ—Ç—ã
slots.forEach(slot => {
    slot.addEventListener('mouseenter', () => {
        if (!isPlaying) {
            slot.style.transform = 'scale(1.05)';
            slot.style.transition = 'transform 0.2s';
        }
    });
    
    slot.addEventListener('mouseleave', () => {
        slot.style.transform = 'scale(1)';
    });
});

// –ü–∞—Å—Ö–∞–ª–∫–∞: –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É BOROV
const borovTitle = document.querySelector('.borov-title');
let clickCount = 0;

borovTitle.addEventListener('click', () => {
    clickCount++;
    if (clickCount === 3) {
        borovTitle.style.animation = 'none';
        borovTitle.style.transform = 'rotate(360deg)';
        borovTitle.style.transition = 'transform 1s';
        
        setTimeout(() => {
            borovTitle.style.animation = 'pulse 2s ease-in-out infinite';
            borovTitle.style.transform = 'rotate(0deg)';
            clickCount = 0;
        }, 1000);
    }
});

// –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ)
// –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω—É–∂–Ω—ã –∞—É–¥–∏–æ-—Ñ–∞–π–ª—ã

// ========================
// –§–ï–†–ú–ê
// ========================

// –°–∏—Å—Ç–µ–º–∞ –±–∞–ª–∞–Ω—Å–∞
let balance = 0;
const balanceDisplay = document.getElementById('balance-amount');
const farmCharacter = document.getElementById('farm-character');
const moneyPopup = document.getElementById('money-popup');

// –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏–∑ localStorage
function loadBalance() {
    const savedBalance = localStorage.getItem('mellstroy_balance');
    if (savedBalance) {
        balance = parseInt(savedBalance);
        updateBalanceDisplay();
    }
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ localStorage
function saveBalance() {
    localStorage.setItem('mellstroy_balance', balance.toString());
}

// –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
function updateBalanceDisplay() {
    if (balanceDisplay) {
        balanceDisplay.textContent = '$' + balance;
    }
}

// –ö–ª–∏–∫ –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–∂—É –Ω–∞ —Ñ–µ—Ä–º–µ
farmCharacter.addEventListener('click', (e) => {
    // –£–≤–µ–ª–∏—á–∏—Ç—å –±–∞–ª–∞–Ω—Å
    balance += 1;
    updateBalanceDisplay();
    saveBalance();
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    farmCharacter.classList.add('clicked');
    setTimeout(() => {
        farmCharacter.classList.remove('clicked');
    }, 300);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É +$1
    const rect = farmCharacter.getBoundingClientRect();
    const popup = moneyPopup.cloneNode(true);
    popup.style.left = rect.left + rect.width / 2 + 'px';
    popup.style.top = rect.top + 'px';
    popup.classList.add('show');
    document.body.appendChild(popup);
    
    // –£–¥–∞–ª–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        popup.remove();
    }, 1000);
});

// –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
window.addEventListener('DOMContentLoaded', loadBalance);

